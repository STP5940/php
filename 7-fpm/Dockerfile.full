#####################################################
# Dockerfile to customeize Nginx for Laravel project
# Based on the official PHP-FPM 7
#####################################################

# Set the base image
FROM php:7.1-fpm

# File Author / Maintainer
MAINTAINER Adiwit Co., Ltd. <info@adiwit.co.th>

# Environmental Variables
ARG DEBIAN_FRONTEND=noninteractive

# Change System TimeZone to Asia/Bangkok
RUN ln -sf /usr/share/zoneinfo/Asia/Bangkok /etc/localtime

# System Upgrade
#RUN echo 'deb http://deb.debian.org/debian stretch main' >> /etc/apt/sources.list \
#    && echo 'deb http://deb.debian.org/debian stretch-updates main' >> /etc/apt/sources.list \
#    && echo 'deb http://security.debian.org stretch/updates main' >> /etc/apt/sources.list \

# Update Repositories
RUN apt-get update \
#    && apt-get upgrade -fy \
#    && apt-get dist-upgrade -fy \
    && apt-get install -fy \
        apt-utils \
        apt-transport-https \
        git
#    && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
#    && curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list \
#    && apt-get update

# BZ2
RUN apt-get install -fy \
    bzip2 \
    bzip2-doc \
    libbz2-dev \
    && docker-php-ext-install bz2

# GD
RUN apt-get install -fy \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng12-dev \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-install gd

# GetText
RUN docker-php-ext-install gettext

# MCrypt
RUN apt-get install -fy \
    libmcrypt-dev \
    && docker-php-ext-install mcrypt

# MySQL
RUN docker-php-ext-install pdo

# Zip
RUN docker-php-ext-install zip

# Install Dependencies
#RUN apt-get install -fy \
#        autoconf \
#        fontconfig \
#        freetds-dev \
#        lcov \
#        libcurl4-gnutls-dev \
#        libenchant-dev \
#        libfontenc1 \
#        libicu-dev \
#        libjpeg62-turbo \
#        libldap2-dev \
#        libpq-dev \
#        libssl1.0.0 \
#        libthai0 \
#        libtidy-dev \
#        libxext6 \
#        libxfont1 \
#        libxml2-dev \
#        libxrender1 \
#        libxslt1-dev \
#        locales \
#        unixodbc-dev \
#        xfonts-base \
#        xfonts-encodings \
#        xfonts-thai \
#        xfonts-utils \
#        xfonts-75dpi \
#        x11-common \
#        zlib1g-dev

# PHP Basic Extensions
#    && ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \
#    && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/libsybdb.so \
#    bcmath \
#    calendar \
#    dba \
#    enchant \
#    exif \
##    gmp \
##   imap \
##   interbase \
#    intl \
#    ldap \
##    oci8 \
##    odbc \
#    opcache \
#    pcntl \
#    pdo_dblib \
##    pdo_firebird \
##    pdo_oci \
##    pdo_odbc \
#    pdo_pgsql \
#    pgsql \
##    pspell \
##    recode \
#    shmop \
##    snmp \
#    soap \
#    sockets \
#    sysvmsg \
#    sysvsem \
#    sysvshm \
#    tidy \
#    wddx \
#    xmlrpc \
#    xsl \

# Memcached
RUN apt-get install -fy \
        libmemcached-dev \
    && doNotUninstall=" \
        libmemcached11 \
        libmemcachedutil2 \
    " \
    && rm -r /var/lib/apt/lists/* \
    && docker-php-source extract \
    && git clone https://github.com/php-memcached-dev/php-memcached /usr/src/php/ext/memcached/ \
    && docker-php-ext-install memcached \
    && docker-php-source delete \
    && apt-mark manual $doNotUninstall \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps

# Redis
RUN pecl install redis \
    && docker-php-ext-enable redis

# Microsoft SQLServer
#RUN pecl install pdo_sqlsrvlsrv-4.1.6.1 sqlsrv-4.1.6.1 \
#    && docker-php-ext-enable sqlsrv pdo_sqlsrv \
#    && sed -i 's/jessie/stretch/g' /etc/apt/sources.list \
#    && apt-get update && ACCEPT_EULA=Y apt-get -fy install msodbcsql mssql-tools

# CleanUps
RUN apt-get autoremove -fy \
    && apt-get autoclean -y

# Configurations
COPY php.ini /usr/local/etc/php/php.ini
    
# Composers
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer

# Set working directory for BASH
WORKDIR /usr/local/etc/php/

# Dynamic Redis Environments
ADD         start.sh /usr/bin/start.sh
RUN         chmod 755 /usr/bin/start.sh
CMD         ["start.sh"]